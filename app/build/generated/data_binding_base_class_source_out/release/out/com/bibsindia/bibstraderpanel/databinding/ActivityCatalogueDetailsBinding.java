// Generated by view binder compiler. Do not edit!
package com.bibsindia.bibstraderpanel.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.airbnb.lottie.LottieAnimationView;
import com.bibsindia.bibstraderpanel.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCatalogueDetailsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatButton btnOrderView;

  @NonNull
  public final AppCompatEditText edQty;

  @NonNull
  public final AppCompatImageView imgBack;

  @NonNull
  public final AppCompatImageView imgCatalogueImage;

  @NonNull
  public final AppCompatImageView imgMinus;

  @NonNull
  public final AppCompatImageView imgPlus;

  @NonNull
  public final LinearLayout layoutBucketAll;

  @NonNull
  public final LinearLayout layoutPrices;

  @NonNull
  public final LinearLayout layoutShare;

  @NonNull
  public final LottieAnimationView loadingView;

  @NonNull
  public final RecyclerView rvShades;

  @NonNull
  public final AppCompatTextView txtCatalogueName;

  @NonNull
  public final AppCompatTextView txtCatalogueNumber;

  @NonNull
  public final AppCompatTextView txtFabricName;

  @NonNull
  public final AppCompatTextView txtManufacturerName;

  @NonNull
  public final AppCompatTextView txtPrices;

  @NonNull
  public final AppCompatTextView txtProductName;

  @NonNull
  public final AppCompatTextView txtTitle;

  @NonNull
  public final AppCompatTextView txtVariantName;

  @NonNull
  public final View viewPrices;

  private ActivityCatalogueDetailsBinding(@NonNull LinearLayout rootView,
      @NonNull AppCompatButton btnOrderView, @NonNull AppCompatEditText edQty,
      @NonNull AppCompatImageView imgBack, @NonNull AppCompatImageView imgCatalogueImage,
      @NonNull AppCompatImageView imgMinus, @NonNull AppCompatImageView imgPlus,
      @NonNull LinearLayout layoutBucketAll, @NonNull LinearLayout layoutPrices,
      @NonNull LinearLayout layoutShare, @NonNull LottieAnimationView loadingView,
      @NonNull RecyclerView rvShades, @NonNull AppCompatTextView txtCatalogueName,
      @NonNull AppCompatTextView txtCatalogueNumber, @NonNull AppCompatTextView txtFabricName,
      @NonNull AppCompatTextView txtManufacturerName, @NonNull AppCompatTextView txtPrices,
      @NonNull AppCompatTextView txtProductName, @NonNull AppCompatTextView txtTitle,
      @NonNull AppCompatTextView txtVariantName, @NonNull View viewPrices) {
    this.rootView = rootView;
    this.btnOrderView = btnOrderView;
    this.edQty = edQty;
    this.imgBack = imgBack;
    this.imgCatalogueImage = imgCatalogueImage;
    this.imgMinus = imgMinus;
    this.imgPlus = imgPlus;
    this.layoutBucketAll = layoutBucketAll;
    this.layoutPrices = layoutPrices;
    this.layoutShare = layoutShare;
    this.loadingView = loadingView;
    this.rvShades = rvShades;
    this.txtCatalogueName = txtCatalogueName;
    this.txtCatalogueNumber = txtCatalogueNumber;
    this.txtFabricName = txtFabricName;
    this.txtManufacturerName = txtManufacturerName;
    this.txtPrices = txtPrices;
    this.txtProductName = txtProductName;
    this.txtTitle = txtTitle;
    this.txtVariantName = txtVariantName;
    this.viewPrices = viewPrices;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCatalogueDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCatalogueDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_catalogue_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCatalogueDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnOrderView;
      AppCompatButton btnOrderView = rootView.findViewById(id);
      if (btnOrderView == null) {
        break missingId;
      }

      id = R.id.edQty;
      AppCompatEditText edQty = rootView.findViewById(id);
      if (edQty == null) {
        break missingId;
      }

      id = R.id.imgBack;
      AppCompatImageView imgBack = rootView.findViewById(id);
      if (imgBack == null) {
        break missingId;
      }

      id = R.id.imgCatalogueImage;
      AppCompatImageView imgCatalogueImage = rootView.findViewById(id);
      if (imgCatalogueImage == null) {
        break missingId;
      }

      id = R.id.imgMinus;
      AppCompatImageView imgMinus = rootView.findViewById(id);
      if (imgMinus == null) {
        break missingId;
      }

      id = R.id.imgPlus;
      AppCompatImageView imgPlus = rootView.findViewById(id);
      if (imgPlus == null) {
        break missingId;
      }

      id = R.id.layoutBucketAll;
      LinearLayout layoutBucketAll = rootView.findViewById(id);
      if (layoutBucketAll == null) {
        break missingId;
      }

      id = R.id.layoutPrices;
      LinearLayout layoutPrices = rootView.findViewById(id);
      if (layoutPrices == null) {
        break missingId;
      }

      id = R.id.layoutShare;
      LinearLayout layoutShare = rootView.findViewById(id);
      if (layoutShare == null) {
        break missingId;
      }

      id = R.id.loadingView;
      LottieAnimationView loadingView = rootView.findViewById(id);
      if (loadingView == null) {
        break missingId;
      }

      id = R.id.rvShades;
      RecyclerView rvShades = rootView.findViewById(id);
      if (rvShades == null) {
        break missingId;
      }

      id = R.id.txtCatalogueName;
      AppCompatTextView txtCatalogueName = rootView.findViewById(id);
      if (txtCatalogueName == null) {
        break missingId;
      }

      id = R.id.txtCatalogueNumber;
      AppCompatTextView txtCatalogueNumber = rootView.findViewById(id);
      if (txtCatalogueNumber == null) {
        break missingId;
      }

      id = R.id.txtFabricName;
      AppCompatTextView txtFabricName = rootView.findViewById(id);
      if (txtFabricName == null) {
        break missingId;
      }

      id = R.id.txtManufacturerName;
      AppCompatTextView txtManufacturerName = rootView.findViewById(id);
      if (txtManufacturerName == null) {
        break missingId;
      }

      id = R.id.txtPrices;
      AppCompatTextView txtPrices = rootView.findViewById(id);
      if (txtPrices == null) {
        break missingId;
      }

      id = R.id.txtProductName;
      AppCompatTextView txtProductName = rootView.findViewById(id);
      if (txtProductName == null) {
        break missingId;
      }

      id = R.id.txtTitle;
      AppCompatTextView txtTitle = rootView.findViewById(id);
      if (txtTitle == null) {
        break missingId;
      }

      id = R.id.txtVariantName;
      AppCompatTextView txtVariantName = rootView.findViewById(id);
      if (txtVariantName == null) {
        break missingId;
      }

      id = R.id.viewPrices;
      View viewPrices = rootView.findViewById(id);
      if (viewPrices == null) {
        break missingId;
      }

      return new ActivityCatalogueDetailsBinding((LinearLayout) rootView, btnOrderView, edQty,
          imgBack, imgCatalogueImage, imgMinus, imgPlus, layoutBucketAll, layoutPrices, layoutShare,
          loadingView, rvShades, txtCatalogueName, txtCatalogueNumber, txtFabricName,
          txtManufacturerName, txtPrices, txtProductName, txtTitle, txtVariantName, viewPrices);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
