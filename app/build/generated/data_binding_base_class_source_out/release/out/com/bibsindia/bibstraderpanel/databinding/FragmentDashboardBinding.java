// Generated by view binder compiler. Do not edit!
package com.bibsindia.bibstraderpanel.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.viewbinding.ViewBinding;
import com.bibsindia.bibstraderpanel.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDashboardBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final LinearLayout layoutLatestCatalogue;

  @NonNull
  public final AppCompatTextView txtLatestCatalogues;

  @NonNull
  public final AppCompatTextView txtTodayOrders;

  @NonNull
  public final AppCompatTextView txtTotalApproved;

  @NonNull
  public final AppCompatTextView txtTotalCatalogues;

  @NonNull
  public final AppCompatTextView txtTotalOrders;

  @NonNull
  public final AppCompatTextView txtTotalPending;

  private FragmentDashboardBinding(@NonNull ScrollView rootView,
      @NonNull LinearLayout layoutLatestCatalogue, @NonNull AppCompatTextView txtLatestCatalogues,
      @NonNull AppCompatTextView txtTodayOrders, @NonNull AppCompatTextView txtTotalApproved,
      @NonNull AppCompatTextView txtTotalCatalogues, @NonNull AppCompatTextView txtTotalOrders,
      @NonNull AppCompatTextView txtTotalPending) {
    this.rootView = rootView;
    this.layoutLatestCatalogue = layoutLatestCatalogue;
    this.txtLatestCatalogues = txtLatestCatalogues;
    this.txtTodayOrders = txtTodayOrders;
    this.txtTotalApproved = txtTotalApproved;
    this.txtTotalCatalogues = txtTotalCatalogues;
    this.txtTotalOrders = txtTotalOrders;
    this.txtTotalPending = txtTotalPending;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.layoutLatestCatalogue;
      LinearLayout layoutLatestCatalogue = rootView.findViewById(id);
      if (layoutLatestCatalogue == null) {
        break missingId;
      }

      id = R.id.txtLatestCatalogues;
      AppCompatTextView txtLatestCatalogues = rootView.findViewById(id);
      if (txtLatestCatalogues == null) {
        break missingId;
      }

      id = R.id.txtTodayOrders;
      AppCompatTextView txtTodayOrders = rootView.findViewById(id);
      if (txtTodayOrders == null) {
        break missingId;
      }

      id = R.id.txtTotalApproved;
      AppCompatTextView txtTotalApproved = rootView.findViewById(id);
      if (txtTotalApproved == null) {
        break missingId;
      }

      id = R.id.txtTotalCatalogues;
      AppCompatTextView txtTotalCatalogues = rootView.findViewById(id);
      if (txtTotalCatalogues == null) {
        break missingId;
      }

      id = R.id.txtTotalOrders;
      AppCompatTextView txtTotalOrders = rootView.findViewById(id);
      if (txtTotalOrders == null) {
        break missingId;
      }

      id = R.id.txtTotalPending;
      AppCompatTextView txtTotalPending = rootView.findViewById(id);
      if (txtTotalPending == null) {
        break missingId;
      }

      return new FragmentDashboardBinding((ScrollView) rootView, layoutLatestCatalogue,
          txtLatestCatalogues, txtTodayOrders, txtTotalApproved, txtTotalCatalogues, txtTotalOrders,
          txtTotalPending);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
